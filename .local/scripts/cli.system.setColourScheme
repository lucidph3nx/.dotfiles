#!/usr/bin/env bash

declare -A THEMES=(
    ["atom_one_dark"]="atom_one_dark"
    ["everforest_dark"]="everforest_dark"
    ["everforest_light"]="everforest_light"
    ["github_light"]="github_light"
)
THEME="${1:-$(printf '%s\n' "${!THEMES[@]}" | fzy)}"
if [[ -z "${THEMES[$THEME]}" ]]; then
    echo "Invalid theme selected"
    exit 1
fi

_switch_colour_scheme() {
  # add placeholder line to kitty
  echo "DELETEBELOW" >> ~/.config/kitty/kitty.conf
  # set theme in kitty
  kitty +kitten themes --reload-in=all ${1}  &> /dev/null
  # remove those stupid added lines in the kitty conf
  if [[ "$OSTYPE" == "darwin"* ]]; then
    sed -i '' '/DELETEBELOW/Q' ~/.config/kitty/kitty.conf
  else
    sed -i '/DELETEBELOW/Q' ~/.config/kitty/kitty.conf
  fi
  # set theme in tmux
  if [ -f ~/.config/tmux/tmux.conf ]; then
    cp ~/.config/tmux/themes/${1}.conf ~/.config/tmux/current_theme.conf
    # sed -E -i.bak \
    # "s/^source.*/source ~\/\.config\/tmux\/theme\/${1}\.conf/" \
    # ~/.config/tmux/tmux.conf && \
    # rm ~/.config/tmux/tmux.conf.bak
    # # if tmux is running, re-source
    if command -v tmux &>/dev/null 2>&1 && pgrep -x "tmux" &>/dev/null; then
      tmux source ~/.config/tmux/tmux.conf  &> /dev/null
    fi
  fi
  # set theme for rofi
  if [ -f ~/.config/rofi/current-theme.rasi ]; then
    echo "@import \"themes/${1}\"" > ~/.config/rofi/current-theme.rasi
  fi
  # set theme for k9s
  if [ -f ~/.config/k9s/themes/${1}.yml ]; then
    rm -f ~/.config/k9s/skin.yml
    cp ~/.config/k9s/themes/${1}.yml ~/.config/k9s/skin.yml
  fi
  # set theme for waybar
  if [ -f ~/.config/waybar/themes/${1}.css ]; then
    rm -f ~/.config/waybar/current-theme.css
    cp ~/.config/waybar/themes/${1}.css ~/.config/waybar/current-theme.css
  fi
  # set theme for swaync
  if [ -f ~/.config/swaync/themes/${1}.css ]; then
    rm -f ~/.config/swaync/current-theme.css
    cp ~/.config/swaync/themes/${1}.css ~/.config/swaync/current-theme.css
    # kill it (restarts with sway)
    pkill swaync &> /dev/null
  fi
  # set theme for sway and reload
  if [ -f ~/.config/sway/themes/${1} ]; then
    rm -f ~/.config/sway/current-theme
    cp ~/.config/sway/themes/${1} ~/.config/sway/current-theme
    if command -v swaymsg &> /dev/null; then
      swaymsg reload  &> /dev/null
    fi
  fi
  # switch theme if on macos
  if command -v osascript &> /dev/null; then
    # if name of theme includes dark, set dark mode
    if [[ $1 == *"_dark"* ]]; then
      osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to true'
    fi
    # if name of theme includes light, set light mode
    if [[ $1 == *"_light"* ]]; then
      osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to false'
    fi
  fi
  # set theme for qutebrowser
  if [ -f ~/.config/qutebrowser/themes/${1}.py ]; then
    rm -f ~/.config/qutebrowser/current-theme.py
    cp ~/.config/qutebrowser/themes/${1}.py ~/.config/qutebrowser/current-theme.py
  fi
  # and the greasemonkeys script which themes the startpage
  if [ -f ~/.config/qutebrowser/greasemonkey-disabled/${1}.css.js ]; then
    rm -f ~/.config/qutebrowser/greasemonkey/current-theme.css.js
    cp ~/.config/qutebrowser/greasemonkey-disabled/${1}.css.js ~/.config/qutebrowser/greasemonkey/current-theme.css.js
  fi
  if command -v qutebrowser &>/dev/null 2>&1 && pgrep -x "qutebrowser" &>/dev/null; then
    qutebrowser ':config-source' &> /dev/null
    qutebrowser ':greasemonkey-reload' &> /dev/null
  fi

  # restart zsh
  exec zsh
}

_switch_colour_scheme "${THEMES[$THEME]}"
